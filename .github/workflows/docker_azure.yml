name: Publish Docker image
on:
  push:
    branches: [azure-deploy]
    paths-ignore:
      - "apps/skde/**"
  pull_request:
    branches: [azure-deploy]
    paths-ignore:
      - "apps/skde/**"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  push_to_registries:
    name: Push Docker image to docker hub
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: "eu-west-1"
    steps:
      - name: Set release variables
        if: github.ref == 'refs/heads/azure-deploy'
        run: |
          echo "S3Key='prod-mong-api.json'" >> $GITHUB_ENV
          echo "env_name=prod-mong-api" >> $GITHUB_ENV
          echo "version_label=${GITHUB_SHA:0:7}_prod_${RANDOM}" >> $GITHUB_ENV
          echo "descr='Release tag deploy'" >> $GITHUB_ENV
          echo "cloudfront_id=${{ secrets.CLOUDFRONT_ID_PROD }}" >> $GITHUB_ENV
      - name: Check out the repo
        uses: actions/checkout@v4.2.2
      - run: corepack enable && yarn install
      - run: yarn workspace api run build
      - name: Lint Dockerfile
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: "apps/api/Dockerfile"
      - name: Prepare
        id: docker_meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: hnskde/mong-api
          tags: |
            type=ref,event=branch
            type=ref,event=pr
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.7.1
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Test docker image
        run: |
          docker build -t test --file apps/api/Dockerfile .
          docker run -e ORIGIN="skde.no" -d test
          sleep 5 # wait for it to die, if not working
          docker kill $(docker ps --filter ancestor=test -q)
      - name: Build and push to Docker Hub
        uses: docker/build-push-action@v6.9.0
        with:
          context: .
          file: ./apps/api/Dockerfile
          build-args: version=${{ env.version_label }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

